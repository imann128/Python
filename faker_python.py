# -*- coding: utf-8 -*-
"""Faker_python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hK39Gh03GCZVkEL1DtZOmKFF4Tb4Xt4n
"""

pip install Faker

from faker import Faker
import csv
import random

fake = Faker()

Number_of_Patients = 50;
Number_of_Doctors = 50;
Number_of_Admins = 3;
Number_of_Vitals = 50;
Number_of_Appointments = 50;
Number_of_Consultations = 50;
Number_of_Prescriptions = 50;

diagnosis_list = ["Allergy", "Flu", "Fever", "Migraine", "Nausea", "Muscle fatigue", "Pain"]
medicine_list = ["Ibobrufen", "Rigix", "Sumatec", "Mucaine", "Dicloran", "Panadol", "Arinac"]
treatment_list = ["Rest and hydration", "Pain reliever and rest", "Allergy medication and wear a mask", "Avoid strenous work"]

diagnosis_to_medicine = {
    "Allergy" : "Rigix",
     "Flu": "Arinac",
    "Migraine" : "Sumatec",
    "Fever" : "Panadol",
    "Nausea": "Mucaine",
    "Muscle fatigue": "Dicloran",
    "Pain": "Ibobrufen"
}

diagnosis_to_treatment = {
    "Allergy" : "Allergy medication and wear a mask",
    "Flu" : "Rest and hydration",
    "Fever": "Rest and hydration",
    "Nausea": "Rest and hydration",
    "Migraine": "Pain reliever and rest",
    "Pain": "Avoid strenous work",
    "Muscle fatigue": "Pain reliever and rest"
}

# Generate Patients
patients = []
for _ in range(Number_of_Patients):
    patients.append({
    "id": fake.uuid4()[:8],
    "name": fake.name(),
    "email": fake.email()
})

# Generate Doctors
doctors = []
for _ in range(Number_of_Doctors):
    doctors.append({
    "id": fake.uuid4()[:8],
    "name": fake.name(),
    "email": fake.email(),
    "password": fake.password()
})

# Generate Admin
admins = []
for _ in range(Number_of_Admins):
    admins.append({
    "name": fake.name(),
    "password": fake.password()
})



# Generate Vitals
vitals = []
for _ in range(Number_of_Vitals):
    p = random.choice(patients)
    vitals.append({
        "patientId": p["id"],
        "heartRate": random.randint(60, 100),
        "oxygenLevel": random.randint(90, 100),
        "bloodPressure": f"{random.randint(110, 130)}/{random.randint(70, 90)}",
        "temperature": round(random.uniform(36.0, 38.0), 1)
    })

# Generate Appointments
appointments = []
for _ in range(Number_of_Appointments):
    p = random.choice(patients)
    d = random.choice(doctors)
    appointments.append({
        "appointmentDate": fake.date_between(start_date='-6M', end_date='today'),
        "doctorName": d["name"],
        "patientId": p["id"],
        "status": random.choice(["Pending", "Completed", "Cancelled"])
    })

# Generate Consultations
consultations = []
for _ in range(Number_of_Consultations):
    p = random.choice(patients)
    d = random.choice(doctors)
    diagnosis = random.choice(diagnosis_list)
    treatment = diagnosis_to_treatment.get(diagnosis, random.choice(treatment_list))
    consultations.append({
        "patientId": p["id"],
        "doctorName": d["name"],
        "diagnosis": diagnosis,
        "treatment": treatment
    })

# Generate Prescriptions
prescriptions = []
for _ in range(Number_of_Prescriptions):
    p = random.choice(patients)
    diagnosis = random.choice(diagnosis_list)
    medication = diagnosis_to_medicine.get(diagnosis, random.choice(medicine_list))
    prescriptions.append({
        "patientId": p["id"],
        "medication": medication,
        "dosage": f"{random.randint(1, 2)} tablet(s) of {random.randint(250, 500)}mg",
        "schedule": random.choice(["Once daily", "Twice daily", "Every 8 hours"]),
        "prescribingDoctor": random.choice(doctors)["name"]
    })

# save as CSV
def save_csv(filename, fieldnames, rows):
    with open(filename, 'w', newline='') as f:
        writer = csv.DictWriter(f, fieldnames=fieldnames)
        writer.writeheader()
        writer.writerows(rows)

save_csv('patients.csv', ["id", "name", "email"], patients)
save_csv('doctors.csv', ["id", "name", "email", "password"], doctors)
save_csv('adminss.csv', ["name", "password"], admins)
save_csv('vitals.csv', ["patientId", "heartRate", "oxygenLevel", "bloodPressure", "temperature"], vitals)
save_csv('appointments.csv', ["appointmentDate", "doctorName", "patientId", "status"], appointments)
save_csv('consultations.csv', ["patientId", "doctorName", "diagnosis", "treatment"], consultations)
save_csv('prescriptions.csv', ["patientId", "medication", "dosage", "schedule", "prescribingDoctor"], prescriptions)

print("All CSVs generated")

